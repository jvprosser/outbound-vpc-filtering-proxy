# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
AWSTemplateFormatVersion: '2010-09-09'
Description: Create VPC for proxy demo
Parameters:

  VPCCidrBlock:
    Type: String
    Description: CIDR block for VPC to deploy. (X.X.X.X/X). The allowed block size is between a /16 netmask and /28 netmask.
    Default: 10.0.0.0/16
  PublicSubnetCIDR1:
    Type: String
    Description: First public subnet CIDR 
    Default: 10.0.0.0/19
  PublicSubnetCIDR2:
    Type: String
    Description: Second public subnet CIDR 
    Default: 10.0.32.0/19
  PublicSubnetCIDR3:
    Type: String
    Description: Third public subnet CIDR 
    Default: 10.0.64.0/19
  PrivateSubnetCIDR1:
    Type: String
    Description: First private subnet CIDR 
    Default: 10.0.96.0/19
  PrivateSubnetCIDR2:
    Type: String
    Description: Second private subnet CIDR 
    Default: 10.0.128.0/19
  PrivateSubnetCIDR3:
    Type: String
    Description: Thirs private subnet CIDR 
    Default: 10.0.160.0/19
Resources:
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'VPCCidrBlock'
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub vpc-${AWS::StackName}

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Internet Gateway
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref 'InternetGateway'
      VpcId: !Ref 'VPC1'
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref 'PublicSubnetCIDR1'
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      MapPublicIpOnLaunch: 'false'
      Tags:
        - Key: Name
          Value: Public subnet 1

      VpcId: !Ref 'VPC1'
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref 'PublicSubnetCIDR2'
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      MapPublicIpOnLaunch: 'false'
      Tags:
        - Key: Name
          Value: Public subnet 2
      VpcId: !Ref 'VPC1'
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref 'PublicSubnetCIDR3'
      AvailabilityZone: !Select
        - '2'
        - !GetAZs ''
      MapPublicIpOnLaunch: 'false'
      Tags:
        - Key: Name
          Value: Pubic subnet 3

      VpcId: !Ref 'VPC1'
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC1'
      Tags:
        - Key: Name
          Value: Public Route Table
  AttachPublicSubnet1RouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      SubnetId: !Ref 'PublicSubnet1'
  AttachPublicSubnet2RouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      SubnetId: !Ref 'PublicSubnet2'
  AttachPublicSubnet3RouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      SubnetId: !Ref 'PublicSubnet3'
  PublicRoutetoInternet:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'InternetGateway'
      RouteTableId: !Ref 'PublicRouteTable'
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref 'PrivateSubnetCIDR1'
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      MapPublicIpOnLaunch: 'false'
      Tags:
        - Key: Name
          Value: Private Subnet 1
      VpcId: !Ref 'VPC1'
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref 'PrivateSubnetCIDR2'
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      MapPublicIpOnLaunch: 'false'
      Tags:
        - Key: Name
          Value: Private Subnet 2
      VpcId: !Ref 'VPC1'
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref 'PrivateSubnetCIDR3'
      AvailabilityZone: !Select
        - '2'
        - !GetAZs ''
      MapPublicIpOnLaunch: 'false'
      Tags:
        - Key: Name
          Value: Private Subnet 3
      VpcId: !Ref 'VPC1'
 
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC1'
      Tags:
        - Key: Name
          Value: Private Route Table 1
  AttachPrivateSubnet1RouteTable1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'PrivateRouteTable1'
      SubnetId: !Ref 'PrivateSubnet1'
  AttachPrivateSubnet2RouteTable1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'PrivateRouteTable1'
      SubnetId: !Ref 'PrivateSubnet2'
  AttachPrivateSubnet3RouteTable1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'PrivateRouteTable1'
      SubnetId: !Ref 'PrivateSubnet3'

# JVP ADD
  S3Endpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
            - '*'
            Resource:
            - '*'
      RouteTableIds:
        - !Ref 'PrivateRouteTable1'
        - !Ref 'PublicRouteTable'
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref 'VPC1'

  DynamoDBEndpoint:
      Type: "AWS::EC2::VPCEndpoint"
      Properties:
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal: '*'
              Action:
              - '*'
              Resource:
              - '*'
        RouteTableIds:
          - !Ref 'PublicRouteTable'
          - !Ref 'PrivateRouteTable1'
        ServiceName:
          !Sub "com.amazonaws.${AWS::Region}.dynamodb"
        VpcId: !Ref VPC1


  STSEndpoint:
      Type: "AWS::EC2::VPCEndpoint"
      Properties:
        VpcEndpointType: Interface
        PrivateDnsEnabled: 'true'
        SubnetIds:
          - !Ref 'PrivateSubnet1'
          - !Ref 'PrivateSubnet2'
          - !Ref 'PrivateSubnet3'
        ServiceName:
          !Sub "com.amazonaws.${AWS::Region}.sts"
        VpcId: !Ref VPC1

  ECREndpoint:
      Type: "AWS::EC2::VPCEndpoint"
      Properties:
        VpcEndpointType: Interface
        PrivateDnsEnabled: 'true'
        SubnetIds:
          - !Ref 'PrivateSubnet1'
          - !Ref 'PrivateSubnet2'
          - !Ref 'PrivateSubnet3'
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal: '*'
              Action:
              - '*'
              Resource:
              - '*'
        ServiceName:
          !Sub "com.amazonaws.${AWS::Region}.ecr.api"
        VpcId: !Ref VPC1

  ECREndpoint:
      Type: "AWS::EC2::VPCEndpoint"
      Properties:
        VpcEndpointType: Interface
        PrivateDnsEnabled: 'true'        
        SubnetIds:
          - !Ref 'PrivateSubnet1'
          - !Ref 'PrivateSubnet2'
          - !Ref 'PrivateSubnet3'
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal: '*'
              Action:
              - '*'
              Resource:
              - '*'
        ServiceName:
          !Sub "com.amazonaws.${AWS::Region}.ecr.dkr"
        VpcId: !Ref VPC1

  EC2Endpoint:
      Type: "AWS::EC2::VPCEndpoint"
      Properties:
        VpcEndpointType: Interface
        PrivateDnsEnabled: 'true'        
        SubnetIds:
          - !Ref 'PrivateSubnet1'
          - !Ref 'PrivateSubnet2'
          - !Ref 'PrivateSubnet3'
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Principal: '*'
            Action:
            - '*'
            Resource:
            - '*'      
        ServiceName:
          !Sub "com.amazonaws.${AWS::Region}.ec2"
        VpcId: !Ref VPC1

  CloudformationEndpoint:
      Type: "AWS::EC2::VPCEndpoint"
      Properties:
        VpcEndpointType: Interface
        PrivateDnsEnabled: 'true'        
        SubnetIds:
          - !Ref 'PrivateSubnet1'
          - !Ref 'PrivateSubnet2'
          - !Ref 'PrivateSubnet3'
        ServiceName:
          !Sub "com.amazonaws.${AWS::Region}.cloudformation"
        VpcId: !Ref VPC1

  AutoscalingEndpoint:
      Type: "AWS::EC2::VPCEndpoint"
      Properties:
        SubnetIds:
          - !Ref 'PrivateSubnet1'
          - !Ref 'PrivateSubnet2'
          - !Ref 'PrivateSubnet3'
        VpcEndpointType: Interface
        PrivateDnsEnabled: 'true'        
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Principal: '*'
            Action:
            - '*'
            Resource:
            - '*'      
        ServiceName:
          !Sub "com.amazonaws.${AWS::Region}.autoscaling"
        VpcId: !Ref VPC1

  EFSEndpoint:
      Type: "AWS::EC2::VPCEndpoint"
      Properties:
        VpcEndpointType: Interface
        PrivateDnsEnabled: 'true'        
        SubnetIds:
          - !Ref 'PrivateSubnet1'
          - !Ref 'PrivateSubnet2'
          - !Ref 'PrivateSubnet3'
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Principal: '*'
            Action:
            - '*'
            Resource:
            - '*'      
        ServiceName:
          !Sub "com.amazonaws.${AWS::Region}.elasticfilesystem"
        VpcId: !Ref VPC1

  ELBEndpoint:
      Type: "AWS::EC2::VPCEndpoint"
      Properties:
        VpcEndpointType: Interface
        PrivateDnsEnabled: 'true'        
        SubnetIds:
          - !Ref 'PrivateSubnet1'
          - !Ref 'PrivateSubnet2'
          - !Ref 'PrivateSubnet3'
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Principal: '*'
            Action:
            - '*'
            Resource:
            - '*'      
        ServiceName:
          !Sub "com.amazonaws.${AWS::Region}.elasticloadbalancing"
        VpcId: !Ref VPC1

# JVP END

Outputs:
  VPCID:
    Description: VPC ID
    Value: !Ref 'VPC1'
    Export:
      Name: !Sub 'VPC1'
  VPCCidrBlock:
    Description: VPC Cidr Block
    Value: !Ref 'VPCCidrBlock'
    Export:
      Name: !Sub '${AWS::StackName}-VPCCidrBlock'
  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref 'PublicSubnet1'
    Export:
      Name: !Sub '${AWS::StackName}-public-subnet-1'
  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref 'PublicSubnet2'
    Export:
      Name: !Sub '${AWS::StackName}-public-subnet-2'
  PublicSubnet3:
    Description: Public Subnet 3
    Value: !Ref 'PublicSubnet3'
    Export:
      Name: !Sub '${AWS::StackName}-public-subnet-3'
  PrivateSubnet1:
    Description: Private Subnet 1
    Value: !Ref 'PrivateSubnet1'
    Export:
      Name: !Sub '${AWS::StackName}-private-subnet-1'
  PrivateSubnet2:
    Description: Private Subnet 2
    Value: !Ref 'PrivateSubnet2'
    Export:
      Name: !Sub '${AWS::StackName}-private-subnet-2'
  PrivateSubnet3:
    Description: Private Subnet 3
    Value: !Ref 'PrivateSubnet3'
    Export:
      Name: !Sub '${AWS::StackName}-private-subnet-3'
